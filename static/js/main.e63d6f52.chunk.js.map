{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","Text","setText","style","color","Heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","split","toString","charAt","slice","length","defaultProps","aboutText","Alert","alert","role","word","lower","captalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e63d6f52.chunk.js","sourcesContent":["import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"/navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link> */}\r\n              </li>\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button> \r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode=== \"light\"?\"dark\":\"light\"}`}>\r\n              <input className=\"form-check-input\" onClick ={props.toggleMode} type=\"checkbox\"  id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set Title here\",\r\n    aboutText: \"About text here\"\r\n\r\n}\r\n","import React, {useState} from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    const [Text, setText ] = useState('');\r\n\r\n    const handleUpClick =()=> {\r\n        //console.log(\"UpperCase was Clicked \"+ {Text})\r\n        let newText = Text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase!\", \"success\");\r\n    }\r\n    const handleLowClick =()=> {\r\n        //console.log(\"UpperCase was Clicked \"+ {Text})\r\n        let newText = Text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase!\", \"success\");\r\n    }\r\n    const handleClearClick =()=> {\r\n        //console.log(\"UpperCase was Clicked \"+ {Text})\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Clear Text!\", \"success\");\r\n    }\r\n    const handleTitleCase =()=> {\r\n        // let len \r\n        let newText= Text.split(\" \");;\r\n        newText= newText.toString().charAt(0).toUpperCase() + newText.toString().slice(1).toLowerCase() ;\r\n        \r\n    //     for(let i=0;i<=len;i++){\r\n            \r\n    //    }\r\n        setText(newText); \r\n        props.showAlert(\"Converted to TitleCase!\", \"success\");\r\n       \r\n        \r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        //console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className=\"container\"  style={{color: props.mode=== \"dark\"?\"white\":\"black\"}}>\r\n            <h1>{props.Heading}</h1>\r\n            <div className =\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"myBox\" style={{backgroundColor: props.mode=== \"dark\"?\"grey\":\"white\", color: props.mode=== \"dark\"?\"white\":\"black\"}} value={Text} onChange={handleOnChange} rows=\"9\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-0\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleTitleCase}>Title Case</button>\r\n        </div>\r\n        <div className=\"container my-2\" style={{color: props.mode=== \"dark\"?\"white\":\"black\"}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{Text.split(\" \").length} Words and {Text.length} Characters</p>\r\n            <p>{0.008 * Text.split(\" \").length} Reading Time in Minutes</p>\r\n            <h2>Preview</h2>\r\n            <p>{Text.length>0?Text:\"Enter your Text in above textbox for preview\"}</p>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const captalize = (word)=> {\r\n        const lower = word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n   \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{captalize(props.alert.type)}</strong>: {props.alert.msg}\r\n       \r\n    </div>\r\n   \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n//  import About from \"./component/About\";\nimport Navbar from \"./component/Navbar\";\nimport TextForm from \"./component/TextForm\";\nimport Alert from \"./component/Alert\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  \n  const [mode, setMode ] = useState('light'); // whether Dark Mode is enable or not\n  const [alert, setAlert ] = useState(null); // whether Dark Mode is enable or not\n\n  const showAlert = (message,type)=> {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n      \n    }, 1500);\n  }\n\n  const toggleMode = ()=> {\n    if(mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been Enabled\", \"success\");\n      document.title = \"TextUtils -Dark Mode\";\n      // setInterval(() => {\n      //   document.title = \"TextUtils -Dark Mode\";\n      // },2000)\n      // setInterval(() => {\n      //   document.title = \"Install TextUtils Now\";\n      // },1500)\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been Enabled\", \"success\");\n      document.title = \"TextUtils -Light Mode\";\n    }\n    \n\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      <TextForm showAlert={showAlert} Heading=\"Enter your Text for analyze\" mode={mode}/>\n        {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About />} />\n            \n          \n          <Route path=\"/\" element={ <TextForm showAlert={showAlert} Heading=\"Enter your Text for analyze\" mode={mode}/> } />\n           \n           */}\n        {/* </Routes> */}\n        \n      </div>\n      \n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}